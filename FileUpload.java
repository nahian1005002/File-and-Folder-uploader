/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package networking;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Nahian
 */
public class FileUpload extends javax.swing.JFrame {

    Client client;
    File f[];
   
    FileUpload(Client client) {
        this.client=client;
        initComponents();
        
    }

    private FileUpload() {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("jLabel3");

        jButton2.setText("submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("jLabel4");

        jButton3.setText("resubmit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(36, 36, 36)
                        .addComponent(jButton3))
                    .addComponent(jButton1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void startUp()
    {
        String str="Allowable File Types :";
        for(int i=0;i<client.fileTypes.length;i++)
            str+=' '+client.fileTypes[i];
        jLabel1.setText(str);
        jLabel2.setText("Folder Upload option :"+client.folderOption);
        jLabel3.setText("Maximum File Size :"+client.maxFileSize);
        jLabel4.setText("Maximum Number of File :"+client.numberOfFile);
        if(client.fixedFileName!=null)
            jLabel6.setText("Fixed File Name :"+client.fixedFileName);
        else
            jLabel6.setText("");
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser= new JFileChooser();  
        
        
        chooser.setMultiSelectionEnabled(true);
        if(client.folderOption)
            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        else
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showOpenDialog(this);
       
        boolean flag=false;
            f=chooser.getSelectedFiles();
            if(f.length>client.numberOfFile)
            {
                JOptionPane.showMessageDialog(null,"Number of file is more than maximum limit. Please try again");
                flag=true;
            }
            for(int i=0;i<f.length;i++)
            {
                if(f[i].isDirectory())
                    continue;
                int j;
                for(j=0;j<client.fileTypes.length;j++)
                {
                    if(client.fileTypes[j] == null ? f[i].getName().substring(f[i].getName().lastIndexOf('.')) == null : client.fileTypes[j].equals(f[i].getName().substring(f[i].getName().lastIndexOf('.'))))
                        break;
                }
                if(j==client.fileTypes.length)
                {
                    JOptionPane.showMessageDialog(null,"wrong type of file is chosen. Please try again");
                    flag=true;
                    break;
                }   
            }
            for(int i=0;i<f.length;i++)
            {
                long size;
                if(f[i].isDirectory())
                    size=folderSize(f[i]);
                else
                    size=f[i].length();
                if(size>client.maxFileSize)
                {
                    JOptionPane.showMessageDialog(null,"Maximum file size constraint violated. Please try again");
                    flag=true;
                    break;
                }
                    
            }
            if(client.fixedFileName!=null)
            {
                int i;
                for(i=0;i<f.length;i++)
                {
                    if(f[i].getName() == null ? client.fixedFileName != null : !f[i].getName().equals(client.fixedFileName))
                        break;
                }
                if(i<f.length)
                {
                    JOptionPane.showMessageDialog(null,"your file name does not match the fixed file name. please try againl.");
                    flag=true;
                }
            }
        jButton2.setEnabled(!flag);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            client.oos.writeInt(f.length);
            for(int i=0;i<f.length;i++)
                 client.sendFile(f[i],"");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        jButton2.setEnabled(false);
        jButton3.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int reply=JOptionPane.showConfirmDialog(rootPane,"Do you want to preserve the previous file?");
        System.out.println(reply);
        try{ if(reply==JOptionPane.YES_OPTION)
                {
                    client.oos.writeInt(1);
                    client.oos.writeInt(f.length);
                   
                    boolean flag=false;
                    for(int i=0;i<f.length;i++)
                    {
                        client.oos.writeObject(f[i].getName());
                        client.oos.flush();
                        if(client.ois.readInt()==0)
                        {
                            JOptionPane.showMessageDialog(null,"Your selected file was not sent previously. please try again.");
                            flag=true;
                        }
                            
                    }
                    if(!flag)
                    {
                        client.oos.writeInt(f.length);
                        for(int i=0;i<f.length;i++)
                            client.sendFile(f[i],"");
                    }
                }
                else
                {
                    client.oos.writeInt(0);
                    client.oos.writeInt(f.length);
                    for(int i=0;i<f.length;i++)
                        client.sendFile(f[i],"");
                }
                    
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed
    public long folderSize(File directory) {
    long length = 0;
    for (File file : directory.listFiles()) {
        if (file.isFile())
            length += file.length();
        else
            length += folderSize(file);
    }
    return length;
    }
    /**
     * @param args the command line arguments
     */
 /*   public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FileUpload().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
